---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: crdregistrations.scoby.triggermesh.io
spec:
  group: scoby.triggermesh.io
  names:
    kind: CRDRegistration
    listKind: CRDRegistrationList
    plural: crdregistrations
    shortNames:
    - crdreg
    singular: crdregistration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.crd
      name: CRD
      type: string
    - format: date
      jsonPath: .status.lastRun
      name: last run
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CRDRegistration uses existing CRDs to provide generic controllers
          for them.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CRDRegistrationSpec defines the desired state of a CRD Registration
            properties:
              configuration:
                description: Configuration for rendering the CRD fields into the workload
                  element.
                properties:
                  parameters:
                    description: FromImage contains the container image information.
                    items:
                      description: Parameter defines key/values to be passed to components.
                      properties:
                        name:
                          description: Name for the parameter.
                          type: string
                        required:
                          description: Required flag for the parameter, must be a
                            valid CRD type.
                          type: boolean
                        section:
                          description: Section will set rendered parameter in a nested
                            section element.
                          type: string
                        type:
                          description: Type for the parameter, must be a valid CRD
                            type.
                          type: string
                        valueFrom:
                          description: ValueFrom indicates the reference source for
                            the parameter.
                          properties:
                            fieldRef:
                              description: ObjectFieldSelector selects an APIVersioned
                                field of an object.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            referenceType:
                              description: ReferenceType for the parameter.
                              type: string
                          required:
                          - fieldRef
                          - referenceType
                          type: object
                      required:
                      - name
                      - required
                      - section
                      - type
                      - valueFrom
                      type: object
                    type: array
                type: object
              crd:
                description: Name of the CRD to be used.
                type: string
              workload:
                description: Workload is information on how to create the user workload.
                properties:
                  formFactor:
                    description: FormFactor indicates the kubernetes object that will
                      run instances of the component's workload.
                    properties:
                      deployment:
                        description: Deployment hosting the user workload.
                        properties:
                          replicas:
                            description: Replicas for the deployment.
                            type: integer
                          service:
                            description: Service to create pointing to the deployment.
                            properties:
                              port:
                                description: Port exposed at the service.
                                format: int32
                                type: integer
                              targetPort:
                                description: Port exposed at the target deployment.
                                format: int32
                                type: integer
                            required:
                            - port
                            - targetPort
                            type: object
                        required:
                        - replicas
                        type: object
                      knativeService:
                        description: KnativeService hosting the user workload.
                        properties:
                          maxScale:
                            description: MaxScale is the service maximum scaling replicas
                            type: integer
                          minScale:
                            description: MinScale is the service minimum scaling replicas
                            type: integer
                          visibility:
                            description: Visibility is the network visibility for
                              the service
                            type: string
                        type: object
                    type: object
                  fromImage:
                    description: FromImage contains the container image information.
                    properties:
                      repo:
                        description: Repo where the image can be downloaded
                        type: string
                    required:
                    - repo
                    type: object
                  parameterOptions:
                    description: ParameterOptions sets how parameters from configuration
                      and credentials are passed to workloads.
                    properties:
                      arbitraryParameters:
                        description: ArbitraryParameters allows users to add any parameter
                          to the component spec.
                        type: boolean
                      keyCasing:
                        description: KeyCasing turns a parameter key casing when used
                          at the workload.
                        type: string
                      keyPrefix:
                        description: KeyPrefix adds a prefix to a parameter key when
                          used at the workload.
                        type: string
                      keyStyle:
                        description: KeyStyle turns a parameter key style when used
                          at the workload.
                        type: string
                    required:
                    - arbitraryParameters
                    type: object
                required:
                - fromImage
                type: object
            required:
            - crd
            - workload
            type: object
          status:
            description: CRDRegistrationStatus defines the observed state of CRDRegistration
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Annotations is additional Status fields for the Resource
                  to save some additional State as well as convey more information
                  to the user. This is roughly akin to Annotations on any k8s resource,
                  just the reconciler conveying richer information outwards.
                type: object
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the Object
                  that was last processed by the controller.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
