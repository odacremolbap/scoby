---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: genericregistrations.scoby.triggermesh.io
spec:
  group: scoby.triggermesh.io
  names:
    kind: GenericRegistration
    listKind: GenericRegistrationList
    plural: genericregistrations
    singular: genericregistration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GenericRegistration let users create new custom resources that
          are reconciled using generic controllers.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GenericRegistrationSpec defines the desired state of GenericRegistration
            properties:
              generate:
                description: Generate contains global attributes for the CRD.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations to be added to the generated CRD object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to be added to the generated CRD object
                    type: object
                  names:
                    description: Names is the group parameters that help naming the
                      CRD.
                    properties:
                      kind:
                        description: Kind for the CRD resource that will be generated
                          from this component registration. When not informed the
                          capitalized singular Sield is used.
                        type: string
                      plural:
                        description: Plural name for the the CRD resource.
                        type: string
                      singular:
                        description: Singular is the name of the CRD resource.
                        type: string
                    type: object
                  version:
                    properties:
                      served:
                        default: true
                        description: Whether the resource is enabled at the API or
                          not.
                        type: boolean
                      storage:
                        default: true
                        description: Marks if this version should be used for internal
                          storage.
                        type: boolean
                      version:
                        description: Version for the generated CRD resource.
                        type: string
                    type: object
                required:
                - names
                type: object
              workload:
                description: // Workload is information on how to create the user
                  workload.
                properties:
                  formFactor:
                    description: FormFactor indicates the kubernetes object that will
                      run instances of the component's workload.
                    properties:
                      deployment:
                        description: Deployment hosting the user workload
                        properties:
                          replicas:
                            description: Replicas for the deployment
                            type: integer
                        required:
                        - replicas
                        type: object
                      knativeService:
                        description: KnativeService hosting the user workload
                        properties:
                          maxScale:
                            description: MaxScale is the service maximum scaling replicas
                            type: integer
                          minScale:
                            description: MinScale is the service minimum scaling replicas
                            type: integer
                          visibility:
                            description: Visibility is the network visibility for
                              the service
                            type: string
                        required:
                        - maxScale
                        - minScale
                        type: object
                    type: object
                  fromImage:
                    description: FromImage contains the container image information.
                    properties:
                      repo:
                        description: Repo where the image can be downloaded
                        type: string
                    required:
                    - repo
                    type: object
                  parameterOptions:
                    description: ParameterOptions sets how parameters from configuration
                      and credentials are passed to workloads.
                    properties:
                      arbitraryParameters:
                        description: ArbitraryParameters allows users to add any parameter
                          to the component spec.
                        type: boolean
                      keyCasing:
                        description: KeyCasing turns a parameter key casing when used
                          at the workload.
                        type: string
                      keyPrefix:
                        description: KeyPrefix adds a prefix to a parameter key when
                          used at the workload.
                        type: string
                      keyStyle:
                        description: KeyStyle turns a parameter key style when used
                          at the workload.
                        type: string
                    required:
                    - arbitraryParameters
                    type: object
                required:
                - fromImage
                - parameterOptions
                type: object
            required:
            - generate
            - workload
            type: object
          status:
            description: GenericRegistrationStatus defines the observed state of GenericRegistration
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
